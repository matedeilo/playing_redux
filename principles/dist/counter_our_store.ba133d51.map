{"version":3,"sources":["src/counter_our_store.js"],"names":["counter","state","action","type","createStore","reducer","listeners","getState","dispatch","forEach","listener","subscribe","push","filter","l","store","render","document","body","innerText","addEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,SAAVA,OAAU,GAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AACrC,UAAQA,OAAOC,IAAf;AACE,SAAK,WAAL;AACE,aAAOF,QAAQ,CAAf;AACF,SAAK,WAAL;AACE,aAAOA,QAAQ,CAAf;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMG,cAAc,SAAdA,WAAc,CAACC,OAAD,EAAa;AAC/B,MAAIJ,cAAJ;AACA,MAAIK,YAAY,EAAhB;;AAEA,MAAMC,WAAW,SAAXA,QAAW;AAAA,WAAMN,KAAN;AAAA,GAAjB;;AAEA,MAAMO,WAAW,SAAXA,QAAW,CAACN,MAAD,EAAY;AAC3BD,YAAQI,QAAQJ,KAAR,EAAeC,MAAf,CAAR;AACAI,cAAUG,OAAV,CAAkB;AAAA,aAAYC,UAAZ;AAAA,KAAlB;AACD,GAHD;;AAKA,MAAMC,YAAY,SAAZA,SAAY,CAACD,QAAD,EAAc;AAC9BJ,cAAUM,IAAV,CAAeF,QAAf;AACA,WAAO,YAAM;AACXJ,kBAAYA,UAAUO,MAAV,CAAiB;AAAA,eAAKC,MAAMJ,QAAX;AAAA,OAAjB,CAAZ;AACD,KAFD;AAGD,GALD;;AAOAF,WAAS,EAAT;;AAEA,SAAO,EAAED,kBAAF,EAAYC,kBAAZ,EAAsBG,oBAAtB,EAAP;AACD,CArBD;;AAuBA,IAAMI,QAAQX,YAAYJ,OAAZ,CAAd;;AAEA,IAAMgB,SAAS,SAATA,MAAS,GAAM;AACnBC,WAASC,IAAT,CAAcC,SAAd,GAA0BJ,MAAMR,QAAN,EAA1B;AACD,CAFD;AAGAQ,MAAMJ,SAAN,CAAgBK,MAAhB;AACAA;;AAEAC,SAASG,gBAAT,CAA0B,OAA1B,EAAmC,YAAM;AACvCL,QAAMP,QAAN,CAAe,EAAEL,MAAM,WAAR,EAAf;AACD,CAFD","file":"counter_our_store.ba133d51.map","sourceRoot":"..","sourcesContent":["const counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nconst createStore = (reducer) => {\n  let state;\n  let listeners = [];\n\n  const getState = () => state;\n\n  const dispatch = (action) => {\n    state = reducer(state, action);\n    listeners.forEach(listener => listener());\n  };\n\n  const subscribe = (listener) => {\n    listeners.push(listener);\n    return () => {\n      listeners = listeners.filter(l => l !== listener);\n    }\n  }\n\n  dispatch({});\n\n  return { getState, dispatch, subscribe };\n};\n\nconst store = createStore(counter);\n\nconst render = () => {\n  document.body.innerText = store.getState();\n};\nstore.subscribe(render);\nrender();\n\ndocument.addEventListener(\"click\", () => {\n  store.dispatch({ type: \"INCREMENT\" });\n});\n"]}